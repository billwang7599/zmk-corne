/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

/ {
    behaviors {
        tp: tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        alt_f4: alt_f4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(F4)>;
            label = "ALT_F4";
        };

        ggez: ggez {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(ENTER) &kp G &kp G &kp E &kp Z &kp ENTER>;
            label = "GGEZ";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // | ESC  |  Q  |  W  |  E  |  R  |    T      |   |  Y  |  U   |  I  |  O  |  P  | TAB |
            // | CTRL |  A  |  S  |  D  |  F  |    G      |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |    B      |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
            //                    | GUI | LWR | HYPER/SPC |   | ALT/ENT | RSE  | BKSP |

            bindings = <
&kp ESCAPE      &kp Q  &kp W  &kp E             &kp R  &kp T        &kp Y      &kp U         &kp I         &kp O    &kp P     &kp BACKSPACE
&kp LEFT_SHIFT  &kp A  &kp S  &kp D             &kp F  &kp G        &kp H      &kp J         &kp K         &kp L    &kp SEMI  &kp SINGLE_QUOTE
&kp TAB         &kp Z  &kp X  &kp C             &kp V  &kp B        &kp N      &kp M         &kp COMMA     &kp DOT  &kp FSLH  &kp LEFT_WIN
                              &kp LEFT_CONTROL  &mo 2  &kp SPACE    &kp ENTER  &lt 1 DELETE  &kp LEFT_ALT
            >;
        };

        layer_above {
            // -----------------------------------------------------------------------------------------
            // |       |  F1  |  F2  |  F3  |  F4  |  F5 |            |  F6  |  F7  |  F8  |  F9  |  F10  |   |
            // |  CAPS | Prev | Next | Vol - | Vol + | Play/Pause |   |      | LFT | DWN |  UP | RGT |     |     |
            // | BTCLR | BT1 | BT2 | BT3 | BT4 | BT5 |   |            |     |     |     |     |     |     |
            //                    |     |     |    |                  |     |     |     |

            bindings = <
&kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &kp F6        &kp F7    &kp F8    &kp F9  &kp F10    &kp F11  &kp F12
&kp CAPSLOCK  &kp C_PREV    &kp C_NEXT    &kp C_VOL_DN  &kp C_VOL_UP  &kp C_PP      &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans   &trans
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR    &to 3     &to 4     &trans  &trans     &trans   &trans
                                          &trans        &trans        &trans        &trans    &trans    &trans
            >;
        };

        layer_below {
            // -----------------------------------------------------------------------------------------
            // | ESC  |  !  |  @  |  #  |  $  |    %      |   |  ^  |  &   |  *  |  (  |  )  |   \   |
            // |      |  1  |  2  |  3  |  4  |    5      |   |  -  |  =   |  `  |  [  |  ]  |  "|"  |
            // | SHFT |  6  |  7  |  8  |  9  |    0      |   |  _  |  +   |  ~  |  {  |  }  | RSHFT |
            //                     | GUI |    |HYPER/SPACE|   | ALT/ENT | BKSP |     |

            bindings = <
&kp ESCAPE      &kp EXCL  &kp AT  &kp HASH          &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSLH
&kp LEFT_SHIFT  &kp N1    &kp N2  &kp N3            &kp N4    &kp N5       &kp MINUS  &kp EQUAL  &kp GRAVE        &kp LBKT  &kp RBKT  &kp PIPE
&kp TAB         &kp N6    &kp N7  &kp N8            &kp N9    &kp N0       &kp UNDER  &kp PLUS   &kp TILDE        &kp LBRC  &kp RBRC  &kp LEFT_GUI
                                  &kp LEFT_CONTROL  &none     &kp SPACE    &kp ENTER  &to 5      &kp LEFT_ALT
            >;
        };

        league {
            bindings = <
&tp TAB ESCAPE        &kp N1  &kp N2  &kp N3        &kp N4  &kp N5       &ggez      &alt_f4  &none          &none  &none  &none
&tp LEFT_CONTROL TAB  &kp Q   &kp W   &kp E         &kp R   &kp T        &none      &none    &none          &none  &none  &none
&kp LEFT_SHIFT        &kp A   &kp B   &kp D         &kp F   &kp G        &none      &none    &none          &none  &none  &kp LEFT_WIN
                                      &kp LEFT_ALT  &kp P   &kp SPACE    &kp ENTER  &to 0    &kp BACKSPACE
            >;
        };

        brawlhalla {
            bindings = <
&kp ESCAPE  &none  &kp W  &none  &none  &none        &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &none         &none         &none         &none
&none       &kp A  &kp S  &kp D  &none  &none        &kp H             &kp J              &kp K         &kp L         &kp SEMI      &none
&kp LSHFT   &none  &none  &none  &none  &none        &kp NUMBER_1      &kp NUMBER_2       &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5  &none
                          &none  &none  &kp SPACE    &kp SPACE         &to 0              &none
            >;
        };

        mouse_movements {
            bindings = <
&kp ESCAPE      &none  &none  &none      &none  &none        &mkp MCLK        &mkp LCLK        &mkp RCLK        &kp KP_NUMBER_0  &kp KP_DOT  &none
&kp LEFT_SHIFT  &none  &none  &none      &none  &none        &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &mkp MB4    &mkp MB5
&kp TAB         &none  &none  &none      &none  &none        &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_NUMBER_4  &none       &none
                              &kp LCTRL  &to 0  &kp SPACE    &kp ENTER        &to 0            &kp LEFT_ALT
            >;
        };
    };
};
